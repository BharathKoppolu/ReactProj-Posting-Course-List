Outputting List Data

------------PostLists.js

import React, {useState} from 'react';
import Post from './Post';
import classes from './PostLists.module.css'
import NewPost from './NewPost';
import Modal from './Modal';

const PostLists = (props) => {
    const [posts, setPosts] = useState([]); //manage a list of posts and add a new post when added

    const addPostHandler = (postData) => {
        setPosts((existingPosts)=> [postData, ...existingPosts]);
    };

        return (
        <>
            {props.isPosting &&  
                (<Modal onClose={props.onStopPosting}>
                    <NewPost onCancel={props.onStopPosting} onAddPost={addPostHandler}/>
                </Modal>) 
            }
            {posts.length > 0 && 
            (<ul className={classes.postLists}>
                {posts.map((post) => <Post author={post.author} body={post.body}/>)}
            </ul>)}
            {posts.length === 0 && 
            (<div style={{textAlign: 'center', color:'white'}}>
                <h2>There are no posts yet!</h2>
                <p>Start Adding some posts...</p>
            </div>)}
        </>

    );
}

export default PostLists;



-------NewPost.js

import classes from './NewPost.module.css';
import React, {useState} from 'react';

const  NewPost = (props) => {

  const [enteredBody, setEnteredBody] = useState('');
  const [enteredAuthor, setEnteredAuthor] = useState('');

  const bodyChangeHandler = (event) => {
    setEnteredBody(event.target.value);
  };
  const authorChangeHandler = (event) => {
      setEnteredAuthor(event.target.value);
  };
  const submitHandler = (event) => {
    event.preventDefault();
    const postData = {
      body: enteredBody,
      author: enteredAuthor
    };
    console.log(postData);
    props.onAddPost(postData);
    props.onCancel();
  }; 


  return (
    <form className={classes.form} onSubmit={submitHandler}>
      <p>
        <label htmlFor="body">Text</label>
        <textarea id="body" required rows={3} onChange={bodyChangeHandler} />
      </p>
      
      <p>
        <label htmlFor="name">Your name</label>
        <input type="text" id="name" required onChange={authorChangeHandler} />
      </p>

      <p className={classes.actions}>
        <button type="button" onClick={props.onCancel}>Cancel</button>
        <button type="submit">Submit</button>
      </p>
    </form>
  );
}

export default NewPost;